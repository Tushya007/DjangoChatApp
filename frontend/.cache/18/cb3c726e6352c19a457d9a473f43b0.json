{"id":"index.html","dependencies":[{"name":"./src\\assets\\style.css","dynamic":true,"resolved":"C:\\Users\\Tushya\\Desktop\\All Projects\\DjangoProjects\\DjangoRealTime\\chatApp\\frontend\\src\\assets\\style.css","parent":"C:\\Users\\Tushya\\Desktop\\All Projects\\DjangoProjects\\DjangoRealTime\\chatApp\\frontend\\index.html"},{"name":"./src\\index.js","dynamic":true,"resolved":"C:\\Users\\Tushya\\Desktop\\All Projects\\DjangoProjects\\DjangoRealTime\\chatApp\\frontend\\src\\index.js","parent":"C:\\Users\\Tushya\\Desktop\\All Projects\\DjangoProjects\\DjangoRealTime\\chatApp\\frontend\\index.html"},{"name":"C:\\Users\\Tushya\\Desktop\\All Projects\\DjangoProjects\\DjangoRealTime\\chatApp\\frontend\\.babelrc","includedInParent":true,"mtime":1608635895212},{"name":"C:\\Users\\Tushya\\Desktop\\All Projects\\DjangoProjects\\DjangoRealTime\\chatApp\\frontend\\package.json","includedInParent":true,"mtime":1608638606886},{"name":"_css_loader","parent":"C:\\Users\\Tushya\\Desktop\\All Projects\\DjangoProjects\\DjangoRealTime\\chatApp\\frontend\\index.html","resolved":"C:\\Users\\Tushya\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\src\\builtins\\css-loader.js"}],"generated":{"html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <link href=\"https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,600,700,300\" rel=\"stylesheet\" type=\"text/css\">\r\n    <script src=\"https://use.typekit.net/hoy3lrg.js\"></script>\r\n    <script>try {\n  Typekit.load({\n    async: true\n  });\n} catch (e) {}</script>\r\n    <link rel=\"stylesheet prefetch\" href=\"https://cdnjs.cloudflare.com/ajax/libs/meyer-reset/2.0/reset.min.css\">\r\n    <link rel=\"stylesheet prefetch\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.2/css/font-awesome.min.css\">\r\n    <link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\r\n    <script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\"></script>\r\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\r\n    <link href=\"//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\r\n    <script src=\"//netdna.bootstrapcdn.com/bootstrap/3.0.0/js/bootstrap.min.js\"></script>\r\n    <script src=\"//code.jquery.com/jquery-1.11.1.min.js\"></script>\r\n    <link rel=\"stylesheet\" href=\"/53ffd62cbaefd7a56d8880d61f0df735.css\">\r\n    <title>Document</title>\r\n</head>\r\n<body>\r\n    <div id=\"app\" style=\"width: 100%;\"></div>\r\n    <script src=\"/1fdf421c05c1140f6d71444ea2b27638.js\"></script>\r\n    <!-- <script>\r\n        var roomName = {{ room_name_json }};\r\n        var username = {{ username }};\r\n    \r\n        var chatSocket = new ReconnectingWebSocket(\r\n            'ws://' + window.location.host +\r\n            '/ws/chat/' + roomName + '/');\r\n    \r\n        chatSocket.onopen = function(e) {\r\n          fetchMessages();\r\n        }\r\n    \r\n        chatSocket.onmessage = function(e) {\r\n            var data = JSON.parse(e.data);\r\n            if (data['command'] === 'messages') {\r\n              for (let i=0; i<data['messages'].length; i++) {\r\n                createMessage(data['messages'][i]);\r\n              }\r\n            } else if (data['command'] === 'new_message'){\r\n              createMessage(data['message']);\r\n            }\r\n        };\r\n    \r\n        chatSocket.onclose = function(e) {\r\n            console.error('Chat socket closed unexpectedly');\r\n        };\r\n    \r\n        document.querySelector('#chat-message-input').onkeyup = function(e) {\r\n            if (e.keyCode === 13) {  // enter, return\r\n                document.querySelector('#chat-message-submit').click();\r\n            }\r\n        };\r\n    \r\n        document.querySelector('#chat-message-submit').onclick = function(e) {\r\n            var messageInputDom = document.getElementById('chat-message-input');\r\n            var message = messageInputDom.value;\r\n            chatSocket.send(JSON.stringify({\r\n                'command': 'new_message',\r\n                'message': message,\r\n                'from': username\r\n            }));\r\n    \r\n            messageInputDom.value = '';\r\n        };\r\n    \r\n        function fetchMessages() {\r\n          chatSocket.send(JSON.stringify({'command': 'fetch_messages' }));\r\n        }\r\n    \r\n        function createMessage(data) {\r\n          var author = data['author'];\r\n          var msgListTag = document.createElement('li');\r\n          var imgTag = document.createElement('img');\r\n          var pTag = document.createElement('p');\r\n          pTag.textContent = data.content;\r\n          imgTag.src = 'http://emilcarlsson.se/assets/mikeross.png';\r\n          \r\n          if (author === username) {\r\n            msgListTag.className = 'sent';\r\n          } else {\r\n            msgListTag.className = 'replies';\r\n          }\r\n          msgListTag.appendChild(imgTag);\r\n          msgListTag.appendChild(pTag);\r\n          document.querySelector('#chat-log').appendChild(msgListTag);\r\n        }\r\n    \r\n    </script> -->\r\n</body>\r\n</html>"},"sourceMaps":null,"error":null,"hash":"4e1a9861fcf8bed178a32c45d7b3803d","cacheData":{"env":{}}}